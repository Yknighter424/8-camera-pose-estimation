# 八相機人體姿態估計系統

## 系統概述
這是一個使用8台相機進行人體3D姿態估計的系統。系統通過ArUco標記進行相機標定，使用MediaPipe進行2D姿態估計，然後通過多視角三角測量重建3D姿態。

## 系統架構

### 1. 相機標定模塊
- `calibrate_single_camera()`: 單相機標定
- `calibrate_eight_cameras()`: 八相機系統標定
- `test_calibration()`: 標定結果測試
主要功能：
- 使用棋盤格圖案進行相機內參標定
- 計算並保存相機內參矩陣和畸變係數
- 提供標定結果可視化和驗證

### 2. ArUco標記檢測模塊
- `define_aruco_parameters()`: 定義ArUco參數
- `setup_aruco_detector()`: 設置檢測器
- `get_aruco_axis()`: 獲取ArUco坐標系
主要功能：
- 檢測場景中的ArUco標記
- 估計相機與世界坐標系之間的變換關係
- 建立統一的世界坐標系

### 3. 姿態估計模塊
- `process_frame()`: 處理單幀圖像
- `triangulate_points_multi_cameras()`: 多相機三角測量
主要功能：
- 使用MediaPipe進行2D姿態估計
- 考慮關鍵點可見度的多視角三角測量
- 3D姿態重建

### 4. 可視化模塊
- `visualize_3d_animation_eight_cameras()`: 3D動畫可視化
- `visualize_reprojection_errors()`: 重投影誤差可視化
主要功能：
- 即時顯示多相機視角
- 3D骨架動畫展示
- 重投影誤差分析與可視化

### 5. 主控制流程
- `process_videos()`: 視頻處理主流程
- `main()`: 程序入口
主要功能：
- 協調各模塊工作
- 處理視頻流
- 數據保存和結果輸出

## 數據流程
1. 輸入：8個相機視頻流
2. 相機標定：獲取相機參數
3. ArUco檢測：建立世界坐標系
4. 每幀處理：
   - 2D姿態估計
   - 多視角三角測量
   - 3D重建
5. 輸出：3D骨架動畫和分析結果

## 關鍵特性
- 多相機同步
- 考慮關鍵點可見度的加權重建
- 實時視覺反饋
- 完整的誤差分析
- 模塊化設計，易於擴展

## 依賴庫
- OpenCV: 圖像處理和相機標定
- MediaPipe: 2D姿態估計
- NumPy: 數值計算
- Matplotlib: 可視化
- PyVista: 3D渲染
- Seaborn: 統計可視化

## 使用說明
1. 準備標定數據（棋盤格圖像）
2. 設置ArUco標記
3. 配置相機參數
4. 運行視頻處理
5. 查看3D重建結果

## 注意事項
- 需要準確的相機同步
- 建議使用高質量相機
- 場景光照要求
- 計算資源需求